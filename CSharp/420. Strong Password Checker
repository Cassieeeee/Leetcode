public class Solution {
    public int StrongPasswordChecker(string s) {
        if (!string.IsNullOrEmpty(s))
        {
            if (s.Length<=2)
                return 6-s.Length;
            char first=s[0];
            bool upper=first>='A' && first<='Z';
            bool lower=first>='a' && first<='z';
            bool digit=first>='0' && first<='9';
            
            int change=0;
            int[] del=new int[3];
            int conti=1;
            for(int i=1;i<s.Length;i++)
            {
                if (s[i]==first)
                    conti++;
                else
                {
                    change+=conti/3;
                    if (conti/3>0)
                        del[conti%3]++;
                    first=s[i];
                    upper=upper || (first>='A' && first<='Z');
                    lower=lower || (first>='a' && first<='z');
                    digit=digit || (first>='0' && first<='9');
                    conti=1;
                }
            }
            change+=conti/3;
            if (conti/3>0)
                del[conti%3]++;
            int check_req=(upper?0:1) + (lower?0:1)+(digit?0:1);
            //Console.WriteLine(check_req);
            if (s.Length>20)
            {
                int d=s.Length-20;
                if (d<=del[0])
                    change-=d;
                else if (d-del[0]<=2*del[1])
                    change-=del[0]+(d-del[0])/2;
                else 
                    change-=del[0]+del[1]+(d-del[0]-2*del[1])/3;
                return d+Math.Max(check_req,change);
            }
            else
                return Math.Max(6-s.Length,Math.Max(change,check_req));
            
        }
        else
            return 6;
    }
}