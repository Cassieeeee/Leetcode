/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode GetIntersectionNode(ListNode headA, ListNode headB) {
        if (headA!=null && headB!=null)
        {
            if (headA==headB)
                return headA;
            
            ListNode curA=headA;
            ListNode curB=headB;
            while(curA!=null && curB!=null)
            {
                curA=curA.next;
                curB=curB.next;
            }
            while(curA!=null)
            {
                headA=headA.next;
                curA=curA.next;
            }
            while(curB!=null)
            {
                headB=headB.next;
                curB=curB.next;
            }
            while(headA!=null && headA!=headB)
            {
                headA=headA.next;
                headB=headB.next;
            }
            return headA;
        }
        else
            return null;
    }
}