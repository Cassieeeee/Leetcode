/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode SortList(ListNode head) {
        return Sort(head);
    }
    
    private ListNode Sort(ListNode head)
    {
        if (head==null || head.next==null)
        {
            return head;
        }
        
        ListNode fast=head;
        ListNode slow=head;
        
        while(fast.next!=null && fast.next.next!=null)
        {
            fast=fast.next.next;
            slow=slow.next;
        }
        
        fast=slow.next;
        slow.next=null;
        
        ListNode p1=Sort(fast);
        ListNode p2=Sort(head);
        
        return merge(p1,p2);
        
    }
    
    private ListNode merge(ListNode p1,ListNode p2)
    {
        if (p1==null)
        {
            return p2;
        }
        if (p2==null)
        {
            return p1;
        }
        
        ListNode p=new ListNode(0);
        ListNode temp=p;
        while (p1!=null && p2!=null)
        {
            if (p1.val<p2.val)
            {
                temp.next=p1;
                p1=p1.next;
            }
            else
            {
                temp.next=p2;
                p2=p2.next;
            }
            temp=temp.next;
        }
        
        while (p1!=null)
        {
            temp.next=p1;
            p1=p1.next;
            temp=temp.next;
        }
        while (p2!=null)
        {
            temp.next=p2;
            p2=p2.next;
            temp=temp.next;
        }
        return p.next;
    }
}