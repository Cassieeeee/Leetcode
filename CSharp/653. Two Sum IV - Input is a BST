/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public bool FindTarget(TreeNode root, int k) {
        if (root!=null)
        {
            if (root.left!=null && root.val+root.left.val==k)
                return true;
            if (root.right!=null && root.val+root.right.val==k)
                return true;
            return find(root.left,root,k) || find(root,root.right,k) || find(root.left,root.right,k);  
        }
        else
            return false;
    }
    
    private bool find(TreeNode left,TreeNode right,int target)
    {
        if (left==null || right==null)
            return false;

        int sum=left.val+right.val;
        
        if (left==right)
        {
            if (sum==target)
                return find(left.left,left.right,target);
            else if (sum>target)
                return find(left.left,right,target);
            else 
                return find(left,left.right,target);
        }
        
        if (sum==target)
            return true;
        if (sum<target)
        {
            return find(left.right,right,target) || find(left,right.right,target);
        }
        else
        {
            return find(left.left,right,target) || find(left,right.left,target);
        }
    }
}