public class Solution {
    public void WallsAndGates(int[,] rooms) {
        if (rooms!=null)
        {
            int m=rooms.GetLength(0);
            int n=rooms.GetLength(1);
            for(int i=0;i<m;i++)
            {
                for(int j=0;j<n;j++)
                {
                    if (rooms[i,j]==0)
                    {
                        DFS(rooms,i,j,0);
                    }
                }
            }
        }
    }
    
    private void DFS(int[,] rooms,int i,int j,int d)
    {
        if (i<0 || j<0 || i==rooms.GetLength(0) || j==rooms.GetLength(1) || rooms[i,j]<d)
            return;
        rooms[i,j]=d;
        DFS(rooms,i-1,j,d+1);
        DFS(rooms,i+1,j,d+1);
        DFS(rooms,i,j-1,d+1);
        DFS(rooms,i,j+1,d+1);
    }
    
}