/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode ReverseBetween(ListNode head, int m, int n) {
        if (m>=n)
            return head;
        ListNode dump=new ListNode(0);
        int idx=1;
        ListNode last=dump;
        while (head!=null)
        {
            ListNode next=head.next;
            if (idx<m)
            {
                last.next=head;
                last=last.next;
                last.next=null;
            }
            else if (m<=idx && idx<=n){
                head.next=last.next;
                last.next=head;
            }
            else
            {
                while(last.next!=null)
                    last=last.next;
                last.next=head;
                last=last.next;
                last.next=null;
                
            }
            head=next;
            idx++;
        }
        
        return dump.next;
    }
}