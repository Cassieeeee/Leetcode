public class Solution {
    int num=0;
    public int NumDecodings(string s) {
        
        if (!string.IsNullOrEmpty(s))
        {
            if (s[0]=='0')
                return 0;
            int[] dp=new int[s.Length+1];
            dp[0]=1;
            if (isValid(s.Substring(0,1)))
            {
                dp[1]=1;
            }
            else
                dp[1]=0;
            for(int j=2;j<=s.Length;j++)
            {
                if (isValid(s.Substring(j-1,1)))
                {
                    dp[j] +=dp[j-1];
                }
                if (isValid(s.Substring(j-2,2)))
                {
                    dp[j]+=dp[j-2];
                }
            }
            return dp[s.Length];
        }
        return num;
    }
    
    bool isValid(string s)
    {
        if (s[0]=='0')
            return false;
        int i=int.Parse(s);
        return i>0 && i<=26;
    }
}