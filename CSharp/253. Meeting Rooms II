/**
 * Definition for an interval.
 * public class Interval {
 *     public int start;
 *     public int end;
 *     public Interval() { start = 0; end = 0; }
 *     public Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class Solution {
    public int MinMeetingRooms(Interval[] intervals) {
        int roomNum=0;
        if (intervals!=null && intervals.Length>0)
        {
            int[] starts=new int[intervals.Length];
            int[] ends=new int[intervals.Length];
            for(int i=0;i<intervals.Length;i++)
            {
                starts[i]=intervals[i].start;
                ends[i]=intervals[i].end;
            }
            Array.Sort(starts);
            Array.Sort(ends);

            int s=0,e=0;
            
            int lastEnd=ends[0];
            while(s<starts.Length)
            {
                if (starts[s]<lastEnd)
                    roomNum++;
                else
                {
                    e++;
                    lastEnd=ends[e];
                }
                s++;
            }
        }
        return roomNum;
    }
}